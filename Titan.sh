#!/bin/bash

channel_logo() {
    echo -e "\n\n–ü—ñ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞–π–∫—Ä–∞—â–∏–π –∫–∞–Ω–∞–ª –ø—Ä–æ –Ω–æ–¥–∏ ‚Äî @NodeUA [üí∏]"
}

download_node() {
  if [ -d "$HOME/.titanedge" ]; then
    echo "–ü–∞–ø–∫–∞ .titanedge –≤–∂–µ —ñ—Å–Ω—É—î. –í–∏–¥–∞–ª—ñ—Ç—å –Ω–æ–¥—É —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–∞–Ω–æ–≤–æ. –í–∏—Ö—ñ–¥..."
    return 0
  fi

  sudo apt install lsof -y

  ports=(1234 55702 48710)

  for port in "${ports[@]}"; do
    if [[ $(lsof -i :"$port" | wc -l) -gt 0 ]]; then
      echo "–ü–æ–º–∏–ª–∫–∞: –ü–æ—Ä—Ç $port –∑–∞–π–Ω—è—Ç–∏–π. –ü—Ä–æ–≥—Ä–∞–º–∞ –Ω–µ –∑–º–æ–∂–µ –≤–∏–∫–æ–Ω–∞—Ç–∏—Å—å."
      exit 1
    fi
  done

  echo -e "–í—Å—ñ –ø–æ—Ä—Ç–∏ –≤—ñ–ª—å–Ω—ñ! –ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è...\n"

  echo '–ü–æ—á–∏–Ω–∞—é –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è...'

  cd $HOME

  sudo apt update -y && sudo apt upgrade -y
  sudo apt-get install nano git gnupg lsb-release apt-transport-https jq screen ca-certificates curl -y

  if ! command -v docker &> /dev/null; then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    rm get-docker.sh
  else
    echo "Docker –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ."
  fi

  if ! command -v docker-compose &> /dev/null; then
    sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
  else
    echo "Docker-Compose –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ."
  fi

  echo '–£—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –Ω–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –ø—É–Ω–∫—Ç—É 2.'
}

launch_node() {
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | while read container_id; do
    docker stop "$container_id"
    docker rm "$container_id"
  done

  while true; do
    echo -en "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à HASH: "
    read HASH
    if [ ! -z "$HASH" ]; then
        break
    fi
    echo 'HASH –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º.'
  done

  docker run --network=host -d -v ~/.titanedge:$HOME/.titanedge nezha123/titan-edge
  sleep 10

  docker run --rm -it -v ~/.titanedge:$HOME/.titanedge nezha123/titan-edge bind --hash=$HASH https://api-test1.container1.titannet.io/api/v2/device/binding

  echo -e "–ù–æ–¥—É –∑–∞–ø—É—â–µ–Ω–æ."
}

delete_node() {
  echo "–ó—É–ø–∏–Ω—è—î–º–æ —Ç–∞ –≤–∏–¥–∞–ª—è—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | while read container_id; do
    docker stop "$container_id"
    docker rm "$container_id"
  done

  echo "–í–∏–¥–∞–ª—è—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é ~/.titanedge"
  rm -rf ~/.titanedge

  echo "–ù–æ–¥—É –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–∏–¥–∞–ª–µ–Ω–æ."
}

main_menu() {
  channel_logo
  echo -e "\n–ú–µ–Ω—é:"
  echo "1. –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–¥—É"
  echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–æ–¥—É"
  echo "3. –í–∏–¥–∞–ª–∏—Ç–∏ –Ω–æ–¥—É"
  echo "4. –í–∏–π—Ç–∏"

  read -p "–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice
  case $choice in
    1) download_node ;;
    2) launch_node ;;
    3) delete_node ;;
    4) exit 0 ;;
    *) echo "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑." ; main_menu ;;
  esac
}

main_menu
